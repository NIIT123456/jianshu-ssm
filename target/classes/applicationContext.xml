<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd">
    <!--读入外部数据库连接属性文件-->
    <context:property-placeholder location="classpath:jdbc.properties"/>
    <!--扫描service包的组件-->
    <context:component-scan base-package="com.maxcore.service"/>

    <!--通过druid配置数据源-->
        <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
          init-method="init" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driverClassName}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <!--设置初始化大小-->
        <property name="initialSize" value="20"/>
        <!--设置连接池最大使用连接数量-->
        <property name="maxActive" value="20"/>
        <!--设置连接池最小空间-->
        <property name="minIdle" value="0"/>
        <!--设置最大等待时间-->
        <property name="maxWait" value="600000"/>
        <!--设置连接池最小生存时间-->
        <property name="minEvictableIdleTimeMillis" value="600000"/>
        <!--打开缓存-->
        <property name="poolPreparedStatements" value="true"/>
        <!--设置缓存的大小-->
        <property name="maxPoolPreparedStatementPerConnectionSize" value="20"/>
    </bean>

    <!--配置MyBatis的SqlSessionFactory实例-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="mapperLocations" value="classpath*:/com/maxcore/mapper/*.xml"/>
        <property name="typeAliasesPackage" value="com.maxcore.entity"/>
        <property name="configLocation" value="mybatis-config.xml"/>
    </bean>
    <!--配置Dao接口所在的包-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <property name="basePackage">
            <value>com.maxcore.dao</value>
        </property>
    </bean>
    <!--配置事务管理器的Bean-->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
          p:dataSource-ref="dataSource"/>
    <!--使用声明式事务添加时使用@Transactional-->
    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>


</beans>